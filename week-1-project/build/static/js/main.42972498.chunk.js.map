{"version":3,"sources":["props.js","index.js"],"names":["App","props","useEffect","document","title","id","data-testid","addDescription","articles","map","article","index","NewsArticle","value","key","calculateReadingLength","reduce","accumulator","text","ReactDOM","render","getElementById"],"mappings":"8KAEA,SAASA,EAAIC,GAKT,OAHAC,qBAAU,WACNC,SAASC,MAAT,YAGA,6BAASC,GAAG,OACR,wBAAIA,GAAG,SAASC,cAAY,SAASL,EAAMG,QACf,IAAzBH,EAAMM,gBAA6C,WAAhBN,EAAMG,MAAuB,uBAAGE,cAAY,eAAf,mCAAmE,KACrIL,EAAMO,SAAWP,EAAMO,SAASC,KAAI,SAACC,EAASC,GAAV,OAAoB,kBAACC,EAAD,CAAaC,MAAOH,EAAQN,MAAOU,IAAKH,OAAa,KAC7GV,EAAMO,UAAYP,EAAMc,uBACrB,uBAAGT,cAAY,kBAAf,sCACwCL,EAAMc,wBAA0Bd,EAAMc,uBAAuBd,EAAMO,SAASQ,QAAO,SAACC,EAAaP,GAAd,OAA0BO,EAAcP,EAAQQ,OAAM,MAAQ,EAAIjB,EAAMc,uBAAuBd,EAAMO,SAASQ,QAAO,SAACC,EAAaP,GAAd,OAA0BO,EAAcP,EAAQQ,OAAM,KAAO,WAAajB,EAAMc,uBAAuBd,EAAMO,SAASQ,QAAO,SAACC,EAAaP,GAAd,OAA0BO,EAAcP,EAAQQ,OAAM,KAAO,WAE1a,MAMhB,SAASN,EAAYX,GACjB,OACI,6BAASK,cAAY,gBACjB,4BAAKL,EAAMY,Q,OChBvBM,EAASC,OAEL,kBAACpB,EAAD,CAAKI,MAAM,SAASG,gBAAgB,EAAMC,SAAU,CAAC,CAAEJ,MAAO,aAAe,CAAEA,MAAO,aAAe,CAAEA,MAAO,gBAE9GD,SAASkB,eAAe,W","file":"static/js/main.42972498.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nfunction App(props) {\r\n\r\n    useEffect(() => {   // Update the document title using the browser API   \r\n        document.title = `My App`;\r\n    });\r\n    return (\r\n        <section id=\"app\">\r\n            <h1 id=\"app h1\" data-testid=\"title\">{props.title}</h1>\r\n            {((props.addDescription === true) || (props.title === \"My App\")) ? <p data-testid=\"description\">This is a description of my app</p> : null}\r\n            {props.articles ? props.articles.map((article, index) => <NewsArticle value={article.title} key={index} />) : null}\r\n            {props.articles && props.calculateReadingLength ? (\r\n                <p data-testid=\"reading-length\">\r\n                    Reading all article will take you {(props.calculateReadingLength && props.calculateReadingLength(props.articles.reduce((accumulator, article) => accumulator + article.text, ''))) > 1 ? props.calculateReadingLength(props.articles.reduce((accumulator, article) => accumulator + article.text, '')) + ' minutes' : props.calculateReadingLength(props.articles.reduce((accumulator, article) => accumulator + article.text, '')) + ' minute'}\r\n                </p>\r\n            ) : null}\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nfunction NewsArticle(props) {\r\n    return (\r\n        <article data-testid=\"news-article\" >\r\n            <h1>{props.value}</h1>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport { App };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './props';\r\n\r\n//import { MyApp, App } from './component';\r\n//import * as serviceWorker from './serviceWorker';\r\n// Check the tests in ../public/index.html to see what to fix.\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <App title=\"My App\" addDescription={true} articles={[{ title: 'article 1' }, { title: 'article 2' }, { title: 'article 3' }]} />\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}